Как выглядит структура в Django 
● project_name/ : Это корневая директория вашего проекта Django. Вы можете выбрать имя проекта при его создании. 
● manage.py : Это скрипт командной строки, который используется для управления проектом Django. С его помощью вы  
можете запускать сервер разработки, создавать миграции базы данных, создавать суперпользователя и многое другое. 
● project_name/ : Это вторая директория с тем же именем, что и корневая директория. В ней содержатся основные  
файлы настройки проекта. 
● settings.py : Этот файл содержит настройки проекта Django, такие как базы данных, статические файлы, шаблоны,  
middleware и другие параметры. 
● urls.py : Этот файл определяет основные маршруты URL вашего проекта и связывает их с представлениями (views). 
● asgi.py : Этот файл содержит точку входа для ASGI-совместимых серверов, которые поддерживают асинхронную  
обработку запросов. 
● wsgi.py : Этот файл содержит точку входа для WSGI-совместимых серверов, которые обслуживают ваше приложение в  
рабочей среде. 
● app1/ , app2/ , и т.д.: Это директории для ваших приложений Django. Каждое приложение Django должно находиться в  
отдельной директории. При создании приложения, оно автоматически создастся в этой директории. 
● migrations/ : Это директория, в которой хранятся файлы миграций для базы данных вашего приложения. Миграции  
используются для автоматического обновления схемы базы данных при изменении моделей в приложении. 
● templates/ : Эта директория содержит шаблоны (HTML-файлы) вашего приложения, которые используются для  
отображения пользовательского интерфейса. 
● static/ : В этой директории находятся статические файлы, такие как CSS, JavaScript, изображения и другие ресурсы,  
используемые в вашем приложении. 
● __init__.py : Это пустой файл, который указывает, что директория является пакетом Python. 
● admin.py : В этом файле определяются настройки административного интерфейса Django для моделей приложения. 
● models.py : В этом файле определяются модели данных вашего приложения, которые представляют структуру таблиц  
в базе данных. 
● views.py : В этом файле определяются представления, которые обрабатывают запросы и возвращают HTTP-ответы. 
● apps.py : Этот файл содержит конфигурацию приложения, такую как его имя и другие параметры. 
