Генератор и итератор 
Итератор  является более общей концепцией, чем генератор, и представляет собой любой объект, класс которого 
имеет методы __next__ и __iter__. Генератор  – это итератор, который обычно создается путем вызова функции, 
содержащей не менее одного оператора yield. Это ключевое слово действует аналогично return, но возвращает 
объект-генератор. 
Между ними существуют тонкие различия: 
● Для генератора мы написали функцию, а для итератора можно использовать встроенные функции iter() и 
next(). 
● Для генератора используется ключевое слово yield для выдачи по одному объекту за раз. 
● В генераторе может быть сколько угодно операторов yield. 
● Генератор сохраняет текущее состояние локальных переменных (local variables) каждый раз, когда yield 
приостанавливает цикл (loop). Итератор не использует локальные переменные, он работает только с 
итерируемым объектом (iterable). 
● Итератор можно использовать с помощью класса, а генератор — нет. 
● Генераторы работают быстро, компактно и проще. 
● Итераторы экономнее потребляют память. 