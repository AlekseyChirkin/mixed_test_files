Как расшифровать LEGB? 
LEGB - это акроним, который используется для объяснения правил разрешения области видимости (поиска имен) в Python. Когда в коде встречается имя переменной,  
интерпретатор Python ищет это имя в различных областях видимости, определяемых четырьмя уровнями LEGB: 
● L - Local (локальная область видимости): Это область видимости, которая охватывает текущую функцию или блок кода. Имена, определенные внутри этой  
функции или блока, считаются локальными и могут быть использованы только внутри него. Когда функция завершает свою работу или блок кода завершается,  
локальные переменные уничтожаются. 
● E - Enclosing (область видимости замыкания): Это область видимости, которая охватывает вложенные функции (функции, определенные внутри других функций).  
Если внутри вложенной функции используется имя, которое не определено в ее локальной области видимости, интерпретатор будет искать это имя в области  
видимости замыкания, то есть в области видимости внешней функции. 
● G - Global (глобальная область видимости): Это область видимости, которая охватывает весь модуль (файл). Имена, определенные на верхнем уровне файла,  
считаются глобальными и могут быть использованы в любой функции или блоке кода в этом модуле. Имена, объявленные на верхнем уровне файла, также  
доступны внутри функций, если они не были переопределены локально. 
● B - Built-in (встроенная область видимости): Это область видимости, которая содержит имена встроенных функций, модулей и исключений Python, таких как  
print() , len() , sum() , и т.д. Эти имена доступны в любой области видимости без необходимости импорта. 
Когда интерпретатор Python ищет имя переменной, он следует порядку LEGB: сначала ищет в локальной области видимости, затем в области видимости замыкания, далее  
в глобальной области видимости и, наконец, встроенной области видимости. Если интерпретатор находит имя в одной из этих областей, он использует найденное  значение,  
иначе возникает ошибка "NameError". 
